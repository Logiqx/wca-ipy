def runPyScript(pyScript) {
    env.PROJECT_ROOT = "${USER_HOME}/work/${IMAGE_NAME}"
    sh """docker run --rm \
                     --mount type=volume,src=wca_ipy_data,dst=${PROJECT_ROOT}/data,readonly \
                     --mount type=volume,src=wca_ipy_docs,dst=${PROJECT_ROOT}/docs \
                     ${IMAGE_NAME} python/""" + pyScript
}

pipeline {
    agent any
    triggers {
        upstream(upstreamProjects: "wca-ipy-format-extracts",
                 threshold: hudson.model.Result.SUCCESS)
    }
    options {
        lock label: 'Data+Docs'
    }
    environment {
        IMAGE_NAME = 'wca-ipy'
        USER_HOME = '/home/jovyan'
    }
    stages {
        stage('Refresh Rankings') {
            steps {
                runPyScript('Senior_Rankings.py')
                runPyScript('Indicative_Rankings.py')
                runPyScript('Partial_Rankings.py')
                runPyScript('Percentile_Rankings.py')
                runPyScript('Representative_Rankings.py')
            }
        }
    }
    post {
        failure {
            emailext(
                to: "${EMAIL_RECIPIENTS}",
                subject: "Failed Build: ${currentBuild.fullDisplayName}.",
                body: """<p>FAILURE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'</p>
                         <p>See attachment for console output or visit this
                            <a href=\"${env.BUILD_URL}\">link</a>.</p>""",
                attachLog: true
            )
        }
    }
}
